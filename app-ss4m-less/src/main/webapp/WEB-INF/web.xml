<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >
<web-app>
	<display-name>Archetype Created Web Application</display-name>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<!-- log4j配置开始 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:config/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- log4j配置结束 -->
	
	<!-- spring配置文件开始 -->
	<context-param>
		<param-name>contextConfigLocation</param-name><!-- spring配置文件，请根据需要选取 -->
		<param-value>classpath*:webconfig/service-all.xml</param-value>
	</context-param>
	<listener><!-- Spring负责监听web容器启动和关闭的事件 --><!-- Spring ApplicationContext载入 -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener><!-- Spring监听HTTP请求事件 -->
		<!-- 使spring支持request与session的scope,如: -->
		<!-- <bean id="loginAction" class="com.foo.LoginAction" scope="request"/> -->
		<!-- 使用： -->
		<!-- 1、注解获取：@Autowired HttpServletRequest request; -->
		<!-- 2、java代码：HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest(); -->
		<!-- 3、直接在参数中传递：public String sayHi(HttpServletRequest request) -->
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener><!-- Spring 刷新Introspector防止内存泄露 -->
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- spring配置文件结束 -->

	<!-- spring mvc配置开始 -->
	<servlet>
		<servlet-name>Spring-MVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/spring-mvc.xml</param-value><!-- spring mvc配置文件 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Spring-MVC</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- spring mvc配置结束 -->

	<!-- Spring Session分布式会话解决方案 -->
	<filter>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
  
	<!-- 以下的代码都是样例，你可以阅读或者随意删除。 -->
	<servlet>
		<display-name>a simple demo of servlet，you can remove it as you wish.</display-name>
		<servlet-name>DemoServlet</servlet-name>
		<servlet-class>demo.servlet.DemoServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DemoServlet</servlet-name>
		<url-pattern>/DemoServlet</url-pattern>
	</servlet-mapping>

</web-app>
